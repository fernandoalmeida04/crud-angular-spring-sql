{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/projetos\";\n  }\n  getProjectList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createProject(project) {\n    return this.httpClient.post(`${this.baseURL}`, project);\n  }\n  getProjectById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateProject(id, projeto) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, projeto);\n  }\n  deleteProject(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n_class = ProjectService;\n_class.ɵfac = function ProjectService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProjectService","constructor","httpClient","baseURL","getProjectList","get","createProject","project","post","getProjectById","id","updateProject","projeto","put","deleteProject","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Fernando\\Documents\\CRUD full stack\\angular-frontend\\src\\app\\project.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Projeto } from './projeto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  private baseURL = \"http://localhost:8080/api/v1/projetos\";\n  constructor(private httpClient: HttpClient) { }\n\n  getProjectList(): Observable<Projeto[]>{\n    return this.httpClient.get<Projeto[]>(`${this.baseURL}`);\n  }\n\n  createProject(project: Projeto): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, project)\n  }\n  \n  getProjectById(id: number): Observable<Projeto>{\n    return this.httpClient.get<Projeto>(`${this.baseURL}/${id}`);\n  }\n\n  updateProject(id: number, projeto: Projeto): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, projeto);\n  }\n\n  deleteProject(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAG,uCAAuC;EACX;EAE9CC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC1D;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,OAAO,CAAC;EACzD;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EAEAC,aAAaA,CAACD,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIO,EAAE,EAAE,EAAEE,OAAO,CAAC;EAC9D;EAEAE,aAAaA,CAACJ,EAAU;IACtB,OAAO,IAAI,CAACR,UAAU,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;SAvBWV,cAAc;;mBAAdA,MAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdnB,MAAc;EAAAoB,OAAA,EAAdpB,MAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}